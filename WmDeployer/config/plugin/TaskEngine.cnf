
#
# webMethods Deployer plugin Configuration File
# 

#
# Unique identifier for the plugin
#
type=TaskEngine


#
# Deployment Support Type for your plugin server
# RUNTIME/OFFLINE/BOTH
#
deploymentSupportType=OFFLINE


#
# The display name for your plugin server
label=Task Engine

#
# Whether or not the Plugin Instance A will be referring to dependencies
# on Plugin or Server Instance B
# 
referencesOtherServers=FALSE

#
# Just put false here
#
isLocal=FALSE


#
# Path to the web service logic in your plugin web service container
# (only needed if isLocal is FALSE)
#
hostSuffix_SPI_2=ws/wm.task.taskengine.deployer.services

#
# Path to local plugin jar
# (only needed if isLocal is TRUE)
#
#jar=Sample.jar
#className=com.wm.sample.deployer.plugin.SamplePlugin

#
# Fields that will be displayed on the plugin connection configuration
# page for each plugin instance that needs to be accessed by the
# Deployer.  Leaving a blank value for any of these fields will prevent
# the Deployer from displaying it
#
hostLabel=Host
portLabel=Port
userLabel=User
passwordLabel=Password
SSLLabel=Use SSL
versionLabel=Version
rootContext=Root Context
validVersions=10.11@SPI_2,10.7@SPI_2,10.5@SPI_2,10.4@SPI_2,10.3@SPI_2

# testing connection props
connectionProperties=

#
# List of object types that can be deployed 
# 
objectTypes=TaskEngineApp
#
# For each object type listed above, Deployer needs to to know how to 
# label a folder of them, what icon to use, and whether or not an entire
# folder of them can be deployed as a unique object (usually not)
#
 
objectType.TaskApp.folderName=Task Applications
objectType.TaskApp.iconName=icon_task.gif
objectType.TaskApp.foldersAreDeployable=FALSE

#
# Optional list of properties to display (at the project level).
# Data would be gathered from the user for each one of these objects
# and that data would be passed to the plugin during each invocation
# of getObjects (during the Build phase) and deployObjects (during 
# the deploy phase)
# 
projectProperties=

# Project level Options
# 



